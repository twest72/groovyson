/*
 * Copyright (c) 2012, Thomas Westphal
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * - Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in the
 *   documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

group = 'de.aonnet'
version = 'SNAPSHOT'

project.ext.sourceCompatibility = '1.7'
project.ext.targetCompatibility = '1.7'

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'idea'

repositories {
    mavenCentral()
    mavenRepo url: 'http://repository.codehaus.org'
    //mavenLocal()
}

dependencies {
    groovy group: 'org.codehaus.groovy', name: 'groovy', version: '2.0.1'
    compile group: 'org.codehaus.groovy', name: 'groovy-json', version: '2.0.1'
    testCompile group: 'junit', name: 'junit', version: '4.10'
}

test {
    // exclude test: today fails with gradle (AST transformations), works in idea
    exclude '**/JsonSupportTransformationTest.class'
}

// custom tasks for creating source jar
task sourcesJar(type: Jar, dependsOn:classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

// add the jars as artifacts
artifacts {
	archives sourcesJar
}

uploadArchives {
    repositories {
        mavenLocal()
//        mavenDeployer {
//            repository(url: "file://localhost/tmp/myRepo/")
//            pom.project {
//                licenses {
//                    license {
//                        name 'The Apache Software License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                        distribution 'repo'
//                    }
//                }
//            }
//        }
    }
}
